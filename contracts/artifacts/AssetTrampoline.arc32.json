{
  "hints": {
    "optInToAsa(pay,asset)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "openOrder(pay,axfer,asset,uint64,uint64)uint64": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "executeOrder(application,asset,asset)address[]": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "createApplication()void": {
      "call_config": {
        "no_op": "CREATE"
      }
    }
  },
  "bare_call_config": {
    "no_op": "NEVER",
    "opt_in": "NEVER",
    "close_out": "NEVER",
    "update_application": "NEVER",
    "delete_application": "NEVER"
  },
  "schema": {
    "local": {
      "declared": {},
      "reserved": {}
    },
    "global": {
      "declared": {},
      "reserved": {}
    }
  },
  "state": {
    "global": {
      "num_byte_slices": 0,
      "num_uints": 0
    },
    "local": {
      "num_byte_slices": 0,
      "num_uints": 0
    }
  },
  "source": {
    "approval": "",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEw"
  },
  "contract": {
    "name": "AssetTrampoline",
    "desc": "",
    "methods": [
      {
        "name": "optInToAsa",
        "args": [
          {
            "name": "payTxn",
            "type": "pay"
          },
          {
            "name": "asset",
            "type": "asset"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "openOrder",
        "args": [
          {
            "name": "payTxn",
            "type": "pay"
          },
          {
            "name": "assetTransfer",
            "type": "axfer"
          },
          {
            "name": "buyAsset",
            "type": "asset"
          },
          {
            "name": "sellQuant",
            "type": "uint64"
          },
          {
            "name": "buyQuant",
            "type": "uint64"
          }
        ],
        "returns": {
          "type": "uint64"
        }
      },
      {
        "name": "executeOrder",
        "args": [
          {
            "name": "orderApp",
            "type": "application"
          },
          {
            "name": "sellAsset",
            "type": "asset"
          },
          {
            "name": "buyAsset",
            "type": "asset"
          }
        ],
        "returns": {
          "type": "address[]"
        }
      },
      {
        "name": "createApplication",
        "args": [],
        "returns": {
          "type": "void"
        }
      }
    ]
  }
}