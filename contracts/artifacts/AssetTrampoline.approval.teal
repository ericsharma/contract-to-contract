#pragma version 10

// This TEAL was generated by TEALScript v0.79.1
// https://github.com/algorandfoundation/TEALScript

// This contract is compliant with and/or implements the following ARCs: [ ARC4 ]

// The following ten lines of TEAL handle initial program flow
// This pattern is used to make it easy for anyone to parse the start of the program and determine if a specific action is allowed
// Here, action refers to the OnComplete in combination with whether the app is being created or called
// Every possible action for this contract is represented in the switch statement
// If the action is not implmented in the contract, its respective branch will be "NOT_IMPLEMENTED" which just contains "err"
txn ApplicationID
!
int 6
*
txn OnCompletion
+
switch call_NoOp NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED create_NoOp NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED

NOT_IMPLEMENTED:
	err

// optInToAsa(pay,asset)void
abi_route_optInToAsa:
	// asset: asset
	txna ApplicationArgs 1
	btoi
	txnas Assets

	// payTxn: pay
	txn GroupIndex
	int 1
	-
	dup
	gtxns TypeEnum
	int pay
	==
	assert

	// execute optInToAsa(pay,asset)void
	callsub optInToAsa
	int 1
	return

// optInToAsa(payTxn: PayTxn, asset: Asset): void
optInToAsa:
	proto 2 0

	// contracts/AssetTrampoline.algo.ts:32
	// verifyPayTxn(payTxn, {
	//       receiver: globals.currentApplicationAddress,
	//     })
	// verify receiver
	frame_dig -1 // payTxn: PayTxn
	gtxns Receiver
	global CurrentApplicationAddress
	==
	assert

	// contracts/AssetTrampoline.algo.ts:35
	// sendAssetTransfer({
	//       xferAsset: asset,
	//       assetAmount: 0,
	//       sender: globals.currentApplicationAddress,
	//       assetReceiver: globals.currentApplicationAddress,
	//     })
	itxn_begin
	int axfer
	itxn_field TypeEnum

	// contracts/AssetTrampoline.algo.ts:36
	// xferAsset: asset
	frame_dig -2 // asset: Asset
	itxn_field XferAsset

	// contracts/AssetTrampoline.algo.ts:37
	// assetAmount: 0
	int 0
	itxn_field AssetAmount

	// contracts/AssetTrampoline.algo.ts:38
	// sender: globals.currentApplicationAddress
	global CurrentApplicationAddress
	itxn_field Sender

	// contracts/AssetTrampoline.algo.ts:39
	// assetReceiver: globals.currentApplicationAddress
	global CurrentApplicationAddress
	itxn_field AssetReceiver

	// Fee field not set, defaulting to 0
	int 0
	itxn_field Fee

	// Submit inner transaction
	itxn_submit
	retsub

// sendAssetToChildContract(pay,axfer)void
abi_route_sendAssetToChildContract:
	// assetTransfer: axfer
	txn GroupIndex
	int 1
	-
	dup
	gtxns TypeEnum
	int axfer
	==
	assert

	// payTxn: pay
	txn GroupIndex
	int 2
	-
	dup
	gtxns TypeEnum
	int pay
	==
	assert

	// execute sendAssetToChildContract(pay,axfer)void
	callsub sendAssetToChildContract
	int 1
	return

// sendAssetToChildContract(payTxn: PayTxn, assetTransfer: AssetTransferTxn): void
sendAssetToChildContract:
	proto 2 0

	// Push empty bytes after the frame pointer to reserve space for local variables
	byte 0x

	// contracts/AssetTrampoline.algo.ts:45
	// verifyPayTxn(payTxn, {
	//       receiver: globals.currentApplicationAddress,
	//       sender: globals.creatorAddress,
	//     })
	// verify receiver
	frame_dig -1 // payTxn: PayTxn
	gtxns Receiver
	global CurrentApplicationAddress
	==
	assert

	// verify sender
	frame_dig -1 // payTxn: PayTxn
	gtxns Sender
	global CreatorAddress
	==
	assert

	// contracts/AssetTrampoline.algo.ts:50
	// assert(globals.currentApplicationAddress.isOptedInToAsset(assetTransfer.xferAsset))
	global CurrentApplicationAddress
	frame_dig -2 // assetTransfer: AssetTransferTxn
	gtxns XferAsset
	asset_holding_get AssetBalance
	swap
	pop
	assert

	// contracts/AssetTrampoline.algo.ts:51
	// verifyAssetTransferTxn(assetTransfer, {
	//       sender: globals.creatorAddress,
	//       assetReceiver: globals.currentApplicationAddress,
	//     })
	// verify sender
	frame_dig -2 // assetTransfer: AssetTransferTxn
	gtxns Sender
	global CreatorAddress
	==
	assert

	// verify assetReceiver
	frame_dig -2 // assetTransfer: AssetTransferTxn
	gtxns AssetReceiver
	global CurrentApplicationAddress
	==
	assert

	// contracts/AssetTrampoline.algo.ts:57
	// sendMethodCall<[Asset, Account], void>({
	//       name: 'createApplication',
	//       clearStateProgram: ChildContract.clearProgram(),
	//       approvalProgram: ChildContract.approvalProgram(),
	//       methodArgs: [assetTransfer.xferAsset, assetTransfer.sender],
	//       globalNumByteSlice: ChildContract.schema.global.numByteSlice,
	//       globalNumUint: ChildContract.schema.global.numUint,
	//       localNumByteSlice: ChildContract.schema.local.numByteSlice,
	//       localNumUint: ChildContract.schema.local.numUint,
	//     })
	itxn_begin
	int appl
	itxn_field TypeEnum
	method "createApplication(asset,account)void"
	itxn_field ApplicationArgs

	// contracts/AssetTrampoline.algo.ts:59
	// clearStateProgram: ChildContract.clearProgram()
	byte b64 Cg==
	itxn_field ClearStateProgram

	// contracts/AssetTrampoline.algo.ts:60
	// approvalProgram: ChildContract.approvalProgram()
	byte b64 CiACAQAmAQdjcmVhdG9yMRgUgQYLMRkIjQwAbAAAAAAAAAAAAAAAXgAAAAAAAAAAAAAANhoCF8AcNhoBF8AwiAACIkOKAgCABWFzc2V0i/9nKIv+Z4k2GgEXwDCIAAIiQ4oBALGBBLIQi/+yESOyEjIKsgAyCrIUI7IBs4k2GgEXwByIAAIiQ4oBACiL/2eJgAR3vJ31NhoAjgH/lgCABKgFAA6ABI6jkLM2GgCOAv+j/8oA
	itxn_field ApprovalProgram

	// contracts/AssetTrampoline.algo.ts:61
	// methodArgs: [assetTransfer.xferAsset, assetTransfer.sender]
	frame_dig -2 // assetTransfer: AssetTransferTxn
	gtxns XferAsset
	itxn_field Assets
	byte 0x0000000000000000
	itxn_field ApplicationArgs
	frame_dig -2 // assetTransfer: AssetTransferTxn
	gtxns Sender
	itxn_field Accounts
	byte 0x0000000000000001
	itxn_field ApplicationArgs

	// contracts/AssetTrampoline.algo.ts:62
	// globalNumByteSlice: ChildContract.schema.global.numByteSlice
	int 1
	itxn_field GlobalNumByteSlice

	// contracts/AssetTrampoline.algo.ts:63
	// globalNumUint: ChildContract.schema.global.numUint
	int 1
	itxn_field GlobalNumUint

	// contracts/AssetTrampoline.algo.ts:64
	// localNumByteSlice: ChildContract.schema.local.numByteSlice
	int 0
	itxn_field LocalNumByteSlice

	// contracts/AssetTrampoline.algo.ts:65
	// localNumUint: ChildContract.schema.local.numUint
	int 0
	itxn_field LocalNumUint

	// Fee field not set, defaulting to 0
	int 0
	itxn_field Fee

	// Submit inner transaction
	itxn_submit

	// contracts/AssetTrampoline.algo.ts:68
	// childAppId = this.itxn.createdApplicationID
	itxn CreatedApplicationID
	frame_bury 0 // childAppId: application

	// contracts/AssetTrampoline.algo.ts:69
	// sendPayment({
	//       receiver: childAppId.address,
	//       amount: payTxn.amount,
	//     })
	itxn_begin
	int pay
	itxn_field TypeEnum

	// contracts/AssetTrampoline.algo.ts:70
	// receiver: childAppId.address
	frame_dig 0 // childAppId: application
	app_params_get AppAddress
	pop
	itxn_field Receiver

	// contracts/AssetTrampoline.algo.ts:71
	// amount: payTxn.amount
	frame_dig -1 // payTxn: PayTxn
	gtxns Amount
	itxn_field Amount

	// Fee field not set, defaulting to 0
	int 0
	itxn_field Fee

	// Submit inner transaction
	itxn_submit

	// contracts/AssetTrampoline.algo.ts:74
	// sendMethodCall<[Asset], void>({
	//       name: 'triggerOptIn',
	//       applicationID: childAppId,
	//       methodArgs: [assetTransfer.xferAsset],
	//     })
	itxn_begin
	int appl
	itxn_field TypeEnum
	method "triggerOptIn(asset)void"
	itxn_field ApplicationArgs

	// contracts/AssetTrampoline.algo.ts:76
	// applicationID: childAppId
	frame_dig 0 // childAppId: application
	itxn_field ApplicationID

	// contracts/AssetTrampoline.algo.ts:77
	// methodArgs: [assetTransfer.xferAsset]
	frame_dig -2 // assetTransfer: AssetTransferTxn
	gtxns XferAsset
	itxn_field Assets
	byte 0x0000000000000000
	itxn_field ApplicationArgs

	// Fee field not set, defaulting to 0
	int 0
	itxn_field Fee

	// Submit inner transaction
	itxn_submit

	// contracts/AssetTrampoline.algo.ts:79
	// sendAssetTransfer({
	//       xferAsset: assetTransfer.xferAsset,
	//       assetReceiver: childAppId.address,
	//       assetAmount: assetTransfer.assetAmount,
	//     })
	itxn_begin
	int axfer
	itxn_field TypeEnum

	// contracts/AssetTrampoline.algo.ts:80
	// xferAsset: assetTransfer.xferAsset
	frame_dig -2 // assetTransfer: AssetTransferTxn
	gtxns XferAsset
	itxn_field XferAsset

	// contracts/AssetTrampoline.algo.ts:81
	// assetReceiver: childAppId.address
	frame_dig 0 // childAppId: application
	app_params_get AppAddress
	pop
	itxn_field AssetReceiver

	// contracts/AssetTrampoline.algo.ts:82
	// assetAmount: assetTransfer.assetAmount
	frame_dig -2 // assetTransfer: AssetTransferTxn
	gtxns AssetAmount
	itxn_field AssetAmount

	// Fee field not set, defaulting to 0
	int 0
	itxn_field Fee

	// Submit inner transaction
	itxn_submit
	retsub

abi_route_createApplication:
	int 1
	return

create_NoOp:
	method "createApplication()void"
	txna ApplicationArgs 0
	match abi_route_createApplication
	err

call_NoOp:
	method "optInToAsa(pay,asset)void"
	method "sendAssetToChildContract(pay,axfer)void"
	txna ApplicationArgs 0
	match abi_route_optInToAsa abi_route_sendAssetToChildContract
	err